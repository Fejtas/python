import tkinter as tk
from tkinter import messagebox

class CookieClicker:
    def __init__(self, root):
        self.root = root
        self.root.title("Cookie Clicker")

        self.cookies = 0
        self.cookies_per_click = 1
        self.generators = 0
        self.generator_cost = 10
        self.generator_rate = 1  # Generators add 1 cookie per second

        # Labels and Buttons
        self.cookie_label = tk.Label(root, text=f"Cookies: {self.cookies}", font=("Arial", 14))
        self.cookie_label.pack(pady=20)

        self.click_button = tk.Button(root, text="Click Cookie!", command=self.click_cookie, font=("Arial", 12), width=20)
        self.click_button.pack(pady=10)

        self.generator_label = tk.Label(root, text=f"Generators: {self.generators} (Cost: {self.generator_cost} cookies)", font=("Arial", 12))
        self.generator_label.pack(pady=10)

        self.buy_generator_button = tk.Button(root, text="Buy Generator", command=self.buy_generator, font=("Arial", 12), width=20)
        self.buy_generator_button.pack(pady=10)

        # Start automatic cookie generation
        self.root.after(1000, self.generate_cookies)

    def click_cookie(self):
        """Function for handling a cookie click."""
        self.cookies += self.cookies_per_click
        self.update_ui()

    def buy_generator(self):
        """Function to buy a generator if enough cookies."""
        if self.cookies >= self.generator_cost:
            self.cookies -= self.generator_cost
            self.generators += 2
            self.generator_cost = int(self.generator_cost * 1.2)  # Increase the cost of the next generator
            self.update_ui()
        else:
            messagebox.showinfo("Not yet lil bro", f"You need {self.generator_cost} cookies to buy a generator!")

    def generate_cookies(self):
        """Function to automatically generate cookies based on the number of generators."""
        self.cookies += self.generators * self.generator_rate
        self.update_ui()
        # Repeat every second
        self.root.after(1000, self.generate_cookies)

    def update_ui(self):
        """Update all UI elements."""
        self.cookie_label.config(text=f"Cookies: {self.cookies}")
        self.generator_label.config(text=f"Generators: {self.generators} (Cost: {self.generator_cost} cookies)")


# Setup the main window
root = tk.Tk()
game = CookieClicker(root)
root.mainloop() 
